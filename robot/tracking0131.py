# -*- coding: utf-8 -*-
"""tracking0131.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zWIockVydx2bEEFBqzo5oNHc2-GjdI5X
"""

import rospy
from geometry_msgs.msg import Twist
from sensor_msgs.msg import DepthImage
import cv2
import numpy as np

TARGET_DISTANCE = 1.0  # 목표 거리 (m)
Kp = 0.5  # 비례제어 상수

class PersonFollower:
    def __init__(self):
        rospy.init_node("kobuki_follower")
        self.cmd_vel_pub = rospy.Publisher("/cmd_vel", Twist, queue_size=10)
        rospy.Subscriber("/camera/depth/image_raw", DepthImage, self.depth_callback)

    def depth_callback(self, depth_msg):
        # Depth 데이터를 NumPy 배열로 변환
        depth_image = np.frombuffer(depth_msg.data, dtype=np.uint16).reshape(depth_msg.height, depth_msg.width)
        center_depth = np.mean(depth_image[depth_image.shape[0]//2-10 : depth_image.shape[0]//2+10,
                                           depth_image.shape[1]//2-10 : depth_image.shape[1]//2+10]) / 1000.0  # mm -> m

        # PID 제어
        twist = Twist()
        error = center_depth - TARGET_DISTANCE

        if abs(error) > 0.1:
            twist.linear.x = -Kp * error  # 거리가 크면 이동 (음수면 후진, 양수면 전진)

        self.cmd_vel_pub.publish(twist)

    def run(self):
        rospy.spin()

if __name__ == "__main__":
    follower = PersonFollower()
    follower.run()
